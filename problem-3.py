L = [(), (), ("",), ("a", "b"), ("a", "b", "c"), ("d")]

""" Сразу хочу отметить, что кортеж определяют запятые в скобках.
Без запятых, это будет считаться пустым значение; конкатенацией,
если "кортеж" (в кавычках) состоит только из строк без запятых;
сложением, если "кортеж" (в кавычках) состоит только из чисел своего типа. """

dist = []    # создаю пустой список

for i in L:   # дотрагиваюсь до каждого кортежа в моем списке
    if len(i) > 0:  # проверяю пустой ли мой кортеж. даже "" занимает какую-то память
        # если мой кортеж не пустой, то добавь его в список dist
        dist.append(i)
print(dist)  # вывожу ответ юзеру



###  ВНИЗУ БУДЕТ ПРИВЕДЕН КОД БЕЗ КОММЕНТАРИЕВ, чтобы не захломлять и посмотреть на чистый код  ###

"""
L = [(), (), ("",), ("a", "b"), ("a", "b", "c"), ("d")]
dist = []
for i in L:
    if len(i) > 0:
        dist.append(i)
print(dist)

"""


# ВТОРОЙ СПОСОБ, который подсказал Константин

llist = []    # создаю пустой список

for k in L:     # дотрагиваюсь до каждого кортежа в моем списке
    if k:       # дальше будут мои предположения. Константин не рассказывал ПОЧЕМУ и КАК программа работает :)
        """ тут на самом деле должно быть if k is True:.
        Это означает, что, если в моём кортеже есть хотя бы одно значение,
        то будет True (значения присутствуют). А если кортеж пустой, то False.
        Поэтому он будет пропускать пустые кортежи, и будет работать только с кортежами,
        в которых вложен хотя бы одно значеие """

        # если условие выполняется, то добавь его в список llist
        llist.append(k)

print(llist)  # вывожу ответ юзеру



###  ВНИЗУ БУДЕТ ПРИВЕДЕН КОД БЕЗ КОММЕНТАРИЕВ, чтобы не захломлять и посмотреть на чистый код  ###

"""
L = [(), (), ("",), ("a", "b"), ("a", "b", "c"), ("d")]
llist = []
for k in L:
    if k:
        dist.append(k)
print(llist)

"""
